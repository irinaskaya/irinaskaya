version: 2.1
executors:
  pytest:
    docker:
      - image: databricksdocs/pytest:v0.2.6
  python:
    docker:
      - image: databricksdocs/sphinx:v0.0.6
jobs:
  lint:
    executor: pytest
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run: mkdir -pv results
      - run: pip3 install -U click pip loguru
      - run: pylint --output-format=junit:results/pylint.xml --exit-zero */**/*.py
      - run: >
          pylint --exit-zero --output-format=parseable:results/pylint.md \
          $(git diff --name-only master -- '*.py') || echo "pylint was > 0" >> results/pylint.md
      - store_test_results:
          path: results/
      - store_artifacts:
          path: results/
      - run: .circleci/bin/results-to-pr.sh results/pylint.md || true
  pydocstyle:
    executor: pytest
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run: pip3 install -U pytest-pydocstyle
      - run: mkdir -pv results
      - run: pytest --junit-xml results/pydocstyle.xml --pydocstyle || true
      - run: pydocstyle --explain $(git diff --name-only master) > results/pydocstyle.md || true
      - store_test_results:
          path: results/
      - store_artifacts:
          path: results/
      - run: .circleci/bin/results-to-pr.sh results/pydocstyle.md || true

  shellcheck:
    executor: pytest
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run: mkdir -pv results
      - run: shellcheck -f checkstyle $(git diff --name-only master -- '*.sh') > results/shellcheck.md || true > results/shellcheck.md
      - store_artifacts:
          path: results/
      - run: .circleci/bin/results-to-pr.sh results/shellcheck.md
  test:
    executor: pytest
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run: pip3 install -U pytest-pydocstyle
      - run: mkdir -pv results
      - run: pytest > results/pytest.md || true
      - store_test_results:
          path: results/
      - store_artifacts:
          path: results/
      - run: .circleci/bin/results-to-pr.sh results/pytest.md || true
  redirect-test:
      description: "Check for circular redirects problems"
      executor: python
      steps:
        - attach_workspace:
            at: "."
        - run: python circular_redirects.py
  coverage:
    executor: pytest
    steps:
      - checkout
      - attach_workspace:
          at: "."
      - run: pip3 install -U pytest-pydocstyle coverage
      - run: mkdir -pv results
      - run: coverage html -d results **/*.py || true
      - run: coverage report > results/coverage.md || true
      - store_artifacts:
          path: results/
      - run: .circleci/bin/results-to-pr.sh results/coverage.md || true

workflows:
  lint:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - pydocstyle:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - shellcheck:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
  test:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - redirect-test:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
      - coverage:
          filters:
            tags:
              only: /.*/
            branches:
              only: /.*/
